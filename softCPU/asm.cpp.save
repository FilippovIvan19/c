#include <stdio.h>
#include <stdlib.h>
#include <string.h>
const int MaxStrLen = 100;



char* comp_push(char* str, char* str_push)
{
    char* str_push = "1";
    int val;
    char* val_s;

    str = str + 5;

    if (sscanf(str, "%d", val) == 1)
    {
        strcat(str_push, " 1");
        itoa(val, val_s, 10);
        strcat(str_push, " ");
        strcat(str_push, val_s);
    }
    else if (str[0] != '[')
    {
        if (str == "rax")
            strcat(str_push, " 1");
        else if (str == "rbx")
            strcat(str_push, " 2");
        else if (str == "rcx")
            strcat(str_push, " 3");
        else if (str == "rdx")
            strcat(str_push, " 4");

    }
    //else


    return str_push;
}

char* comp_in(char* str, char* str_out)
{

}

char* comp_pop(char* str, char* str_out)
{

}

char* comp_out(char* str, char* str_out)
{

}

char* comp_end(char* str, char* str_out)
{

}

char* comp_add(char* str, char* str_out)
{
    str_out = "11";
    return str_out;
}

char* comp_minus(char* minus, char* str_out)
{
    str_out = "12";
}

char* comp_mul(char* str, char* str_out)
{
    str_out = "13";
}

char* comp_div(char* str, char* str_out)
{
    str_out = "14";
}



int compile(char* in_name, char* out_name)
{
    FILE* in_file = fopen(in_name, "r");
    FILE* out_file = fopen(out_name, "r");

    char str[MaxStrLen] = "";
    char command[MaxStrLen] = " ";
    int val;

    while (fgets(str, MaxStrLen, in_file) != NULL)
    {
        sscanf(str, "%s", command);

        if      (command == "push")
            comp_push(str, str_out);
            
        else if (command == "in")
            comp_in(str, str_out);
            
        else if (command == "pop")
            comp_pop(str, str_out);
            
        else if (command == "out")
            comp_out(str, str_out);
            
        else if (command == "end")
            comp_end(str, str_out);
            
        else if (command == "add")
            comp_add(str, str_out);
            
        else if (command == "minus")
            comp_minus(str, str_out);
            
        else if (command == "mul")
            comp_mul(str, str_out);
            
        else if (command == "div")
            comp_div(str, str_out);
    
    
        fprintf(out_file, "%s ", str_out);

    }


    return 0;
}


int main()
{



    compile("1.txt", "2.txt");



    return 0;
}
